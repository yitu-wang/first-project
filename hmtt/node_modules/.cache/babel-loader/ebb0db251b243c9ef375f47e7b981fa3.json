{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/\\u5C0F\\u738B/Desktop/heimamm/hmtt/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/\\u5C0F\\u738B/Desktop/heimamm/hmtt/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//引入接口函数\nimport { getUserChannelsAPI, getAllChannelsAPI, updateChannelsAPI, removeChannelsAPI } from '@/api'; //引入需要用的组件\n\nimport ArticleList from '@/components/ArticleList.vue';\nimport ChannelIEdit from './ChannelIEdit.vue';\nexport default {\n  name: 'home',\n  data: function data() {\n    return {\n      active: 0,\n      userList: [],\n      allList: [],\n      show: false\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _yield$getUserChannel, res, _yield$getAllChannels, res2;\n\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getUserChannelsAPI();\n\n            case 2:\n              _yield$getUserChannel = _context.sent;\n              res = _yield$getUserChannel.data;\n              _this.userList = res.data.channels; //获取所有的频道列表\n\n              _context.next = 7;\n              return getAllChannelsAPI();\n\n            case 7:\n              _yield$getAllChannels = _context.sent;\n              res2 = _yield$getAllChannels.data;\n              _this.allList = res2.data.channels;\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  components: {\n    ArticleList: ArticleList,\n    ChannelIEdit: ChannelIEdit\n  },\n  methods: {\n    showPopup: function showPopup() {\n      this.show = true;\n    },\n    //channelIEdit组件传出添加的组件(添加频道 )\n    addChannelFn: function addChannelFn(val) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var newArr, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //将新选的频道推送到用户频道\n                _this2.userList.push(val); //还要将最新的数组发送给后台\n                // 了解： 以前的要求：推荐频道不可以传入后台  并且后台接收的data中接受对象内容为 id频道id seq顺序序号\n\n\n                newArr = _this2.userList.filter(function (item) {\n                  return item.id !== 0;\n                }); // const newObjArr = newArr.map((item, index) => {\n                //   const newObj = {\n                //     ...item\n                //   }\n                //   delete newObj.name\n                //   newObj.seq = index\n                //   return newObj\n                // })\n\n                _context2.next = 4;\n                return updateChannelsAPI(newArr);\n\n              case 4:\n                res = _context2.sent;\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    //channel子件传递用户删除的频道按钮\n    removeChannelFn: function removeChannelFn(val) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var index, res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                index = _this3.userList.findIndex(function (item) {\n                  return item.id === val;\n                });\n\n                _this3.userList.splice(index, 1);\n\n                _context3.next = 4;\n                return removeChannelsAPI({\n                  channelID: val\n                });\n\n              case 4:\n                res = _context3.sent;\n                _this3.active = val;\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    //点击channel子件右上方的x按钮隐藏管理页面\n    channelShow: function channelShow(val) {\n      this.show = val;\n    }\n  },\n  computed: {\n    //计算属性计算所有频道-用户频道=剩下可选择的频道\n    unCheckList: function unCheckList() {\n      var _this4 = this;\n\n      //把所有频道数组对象依次取出对比用户已选频道里查找，如果查找不到则filter一个新数组\n      var newArr = this.allList.filter(function (bigObj) {\n        var index = _this4.userList.some(function (smallObj) {\n          return smallObj.id === bigObj.id;\n        });\n\n        if (index) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n      return newArr;\n    }\n  },\n  //组件被缓存时触发的生命周期\n  //组件没有被缓存则会执行destroyed销毁生命周期函数\n  deactivated: function deactivated() {\n    this.$route.meta.scrollT = window.scrollTop;\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA,SACAA,kBADA,EAEAC,iBAFA,EAGAC,iBAHA,EAIAC,iBAJA,QAKA,OALA,C,CAMA;;AACA;AACA;AAEA;EACAC,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC,SADA;MAEAC,YAFA;MAGAC,WAHA;MAIAC;IAJA;EAMA,CATA;EAUAC,OAVA,qBAUA;IAAA;;IAAA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAIAV,oBAJA;;YAAA;cAAA;cAGAW,GAHA,yBAGAN,IAHA;cAKA,mCALA,CAMA;;cANA;cAAA,OASAJ,mBATA;;YAAA;cAAA;cAQAW,IARA,yBAQAP,IARA;cAUA;;YAVA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAWA,CArBA;EAsBAQ;IACAC,wBADA;IAEAC;EAFA,CAtBA;EA0BAC;IACAC,SADA,uBACA;MACA;IACA,CAHA;IAIA;IACAC,YALA,wBAKAC,GALA,EAKA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA;gBACA,0BAFA,CAGA;gBACA;;;gBACAC,MALA,GAKA;kBAAA;gBAAA,EALA,EAMA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;gBAbA;gBAAA,OAcAlB,yBAdA;;cAAA;gBAcAS,GAdA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAeA,CApBA;IAqBA;IACAU,eAtBA,2BAsBAF,GAtBA,EAsBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAG,KADA,GACA;kBAAA;gBAAA,EADA;;gBAEA;;gBAFA;gBAAA,OAIAnB;kBACAoB;gBADA,EAJA;;cAAA;gBAIAZ,GAJA;gBAOA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CA9BA;IAgCA;IACAa,WAjCA,uBAiCAL,GAjCA,EAiCA;MACA;IACA;EAnCA,CA1BA;EA+DAM;IACA;IACAC,WAFA,yBAEA;MAAA;;MACA;MACA;QACA;UACA;QACA,CAFA;;QAGA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CATA;MAUA;IACA;EAfA,CA/DA;EAgFA;EACA;EACAC,WAlFA,yBAkFA;IACA;EACA;AApFA","names":["getUserChannelsAPI","getAllChannelsAPI","updateChannelsAPI","removeChannelsAPI","name","data","active","userList","allList","show","created","res","res2","components","ArticleList","ChannelIEdit","methods","showPopup","addChannelFn","val","newArr","removeChannelFn","index","channelID","channelShow","computed","unCheckList","deactivated"],"sourceRoot":"src/views/home-user","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"box\" style=\"padding-bottom: 44px\">\r\n    <!-- 顶部 -->\r\n    <div>\r\n      <van-nav-bar style=\"background-color: #007bff\" fixed>\r\n        <template slot=\"left\" class=\"text\"> 头条黑马 </template>\r\n        <van-icon name=\"search\" slot=\"right\" color=\"#ffffff\" @click=\"$router.push('/search')\" />\r\n      </van-nav-bar>\r\n    </div>\r\n    <!-- 二级导航 -->\r\n    <div class=\"main\">\r\n      <van-tabs v-model=\"active\" sticky offset-top=\"44px\">\r\n        <van-tab v-for=\"(item, index) in userList\" :key=\"item.id\" :title=\"item.name\" :name=\"item.id\">\r\n          <ArticleList :articleListID=\"item.id\" style=\"margin-top: 44px\"></ArticleList>\r\n        </van-tab>\r\n      </van-tabs>\r\n      <van-icon name=\"plus\" size=\"14px\" class=\"moreChannels\" @click=\"showPopup\"></van-icon>\r\n    </div>\r\n    <!-- 频道管理弹出层 -->\r\n    <van-popup v-model=\"show\" class=\"popup\">\r\n      <ChannelIEdit :userList=\"userList\" :unCheckList=\"unCheckList\" @addChannelEV=\"addChannelFn\"\r\n        @channelShow=\"channelShow\" @removeChannelEV=\"removeChannelFn\" v-model=\"active\"></ChannelIEdit>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  //引入接口函数\r\n  import {\r\n    getUserChannelsAPI,\r\n    getAllChannelsAPI,\r\n    updateChannelsAPI,\r\n    removeChannelsAPI,\r\n  } from '@/api'\r\n  //引入需要用的组件\r\n  import ArticleList from '@/components/ArticleList.vue'\r\n  import ChannelIEdit from './ChannelIEdit.vue'\r\n\r\n  export default {\r\n    name: 'home',\r\n    data() {\r\n      return {\r\n        active: 0,\r\n        userList: [],\r\n        allList: [],\r\n        show: false,\r\n      }\r\n    },\r\n    async created() {\r\n      //获取用户频道列表\r\n      const {\r\n        data: res\r\n      } = await getUserChannelsAPI()\r\n      this.userList = res.data.channels\r\n      //获取所有的频道列表\r\n      const {\r\n        data: res2\r\n      } = await getAllChannelsAPI()\r\n      this.allList = res2.data.channels\r\n    },\r\n    components: {\r\n      ArticleList,\r\n      ChannelIEdit,\r\n    },\r\n    methods: {\r\n      showPopup() {\r\n        this.show = true\r\n      },\r\n      //channelIEdit组件传出添加的组件(添加频道 )\r\n      async addChannelFn(val) {\r\n        //将新选的频道推送到用户频道\r\n        this.userList.push(val)\r\n        //还要将最新的数组发送给后台\r\n        // 了解： 以前的要求：推荐频道不可以传入后台  并且后台接收的data中接受对象内容为 id频道id seq顺序序号\r\n        const newArr = this.userList.filter((item) => item.id !== 0)\r\n        // const newObjArr = newArr.map((item, index) => {\r\n        //   const newObj = {\r\n        //     ...item\r\n        //   }\r\n        //   delete newObj.name\r\n        //   newObj.seq = index\r\n        //   return newObj\r\n        // })\r\n        const res = await updateChannelsAPI(newArr)\r\n      },\r\n      //channel子件传递用户删除的频道按钮\r\n      async removeChannelFn(val) {\r\n        const index = this.userList.findIndex((item) => item.id === val)\r\n        this.userList.splice(index, 1)\r\n\r\n        const res = await removeChannelsAPI({\r\n          channelID: val,\r\n        })\r\n        this.active = val\r\n      },\r\n\r\n      //点击channel子件右上方的x按钮隐藏管理页面\r\n      channelShow(val) {\r\n        this.show = val\r\n      },\r\n    },\r\n    computed: {\r\n      //计算属性计算所有频道-用户频道=剩下可选择的频道\r\n      unCheckList() {\r\n        //把所有频道数组对象依次取出对比用户已选频道里查找，如果查找不到则filter一个新数组\r\n        const newArr = this.allList.filter((bigObj) => {\r\n          const index = this.userList.some((smallObj) => {\r\n            return smallObj.id === bigObj.id\r\n          })\r\n          if (index) {\r\n            return false\r\n          } else {\r\n            return true\r\n          }\r\n        })\r\n        return newArr\r\n      },\r\n    },\r\n    //组件被缓存时触发的生命周期\r\n    //组件没有被缓存则会执行destroyed销毁生命周期函数\r\n    deactivated() {\r\n      this.$route.meta.scrollT = window.scrollTop\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  /deep/.van-nav-bar__left {\r\n    color: #ffffff;\r\n  }\r\n\r\n  /deep/.van-tabs__line {\r\n    background-color: #007bff;\r\n  }\r\n\r\n  /deep/ .van-tabs__wrap {\r\n    padding-right: 30Px;\r\n    background-color: #fff;\r\n  }\r\n\r\n  .moreChannels {\r\n    position: fixed;\r\n    top: 60Px;\r\n    right: 10Px;\r\n    z-index: 999;\r\n  }\r\n\r\n  .popup {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}