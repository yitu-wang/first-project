{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//基于axios封装网络请求\nimport theAxios from 'axios'; //因为要用到this.router，但是js文件中没有this实例，所以要引入router\n\nimport router from '@/router';\nimport { Notify } from 'vant';\nimport { getToken, delToken } from './token';\nvar axios = theAxios.create({\n  baseURL: 'http://toutiao.itheima.net/',\n  timeout: 20000 //20s无响应直接判定超时\n\n}); // 添加请求拦截器\n\naxios.interceptors.request.use(function (config) {\n  var _getToken;\n\n  // 在发送请求之前做些什么\n  //判断本地的token，并且判断是否携带请求体\n  if (((_getToken = getToken()) === null || _getToken === void 0 ? void 0 : _getToken.length) > 0 && config.headers.Authorization === undefined) {\n    config.headers.Authorization = \"Bearer \".concat(getToken());\n  }\n\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\naxios.interceptors.response.use(function (response) {\n  // 2xx 范围内的状态码都会触发该函数。\n  // 对响应数据做点什么\n  return response;\n}, function (error) {\n  // 超出 2xx 范围的状态码都会触发该函数。\n  // 对响应错误做点什么\n  if (error.response.status === 401) {\n    delToken();\n    Notify({\n      type: 'warning',\n      message: '需要进行登录'\n    });\n    router.replace('/login');\n  }\n\n  return Promise.reject(error);\n});\nexport default (function (_ref) {\n  var url = _ref.url,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'GET' : _ref$method,\n      _ref$params = _ref.params,\n      params = _ref$params === void 0 ? {} : _ref$params,\n      _ref$data = _ref.data,\n      data = _ref$data === void 0 ? {} : _ref$data,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers;\n  return axios({\n    url: url,\n    method: method,\n    params: params,\n    data: data,\n    headers: headers\n  });\n});","map":{"version":3,"names":["theAxios","router","Notify","getToken","delToken","axios","create","baseURL","timeout","interceptors","request","use","config","length","headers","Authorization","undefined","error","Promise","reject","response","status","type","message","replace","url","method","params","data"],"sources":["C:/Users/小王/Desktop/heimamm/hmtt/src/utils/request.js"],"sourcesContent":["//基于axios封装网络请求\r\nimport theAxios from 'axios'\r\n//因为要用到this.router，但是js文件中没有this实例，所以要引入router\r\nimport router from '@/router'\r\nimport { Notify } from 'vant'\r\nimport { getToken, delToken } from './token'\r\nconst axios = theAxios.create({\r\n  baseURL: 'http://toutiao.itheima.net/',\r\n  timeout: 20000, //20s无响应直接判定超时\r\n})\r\n// 添加请求拦截器\r\naxios.interceptors.request.use(\r\n  function (config) {\r\n    // 在发送请求之前做些什么\r\n    //判断本地的token，并且判断是否携带请求体\r\n    if (getToken()?.length > 0 && config.headers.Authorization === undefined) {\r\n      config.headers.Authorization = `Bearer ${getToken()}`\r\n    }\r\n    return config\r\n  },\r\n  function (error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    // 2xx 范围内的状态码都会触发该函数。\r\n    // 对响应数据做点什么\r\n    return response\r\n  },\r\n  function (error) {\r\n    // 超出 2xx 范围的状态码都会触发该函数。\r\n    // 对响应错误做点什么\r\n    if (error.response.status === 401) {\r\n      delToken()\r\n      Notify({ type: 'warning', message: '需要进行登录' })\r\n      router.replace('/login')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default ({\r\n  url,\r\n  method = 'GET',\r\n  params = {},\r\n  data = {},\r\n  headers = {},\r\n}) => {\r\n  return axios({\r\n    url,\r\n    method,\r\n    params,\r\n    data,\r\n    headers,\r\n  })\r\n}\r\n"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,OAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,SAAnC;AACA,IAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAT,CAAgB;EAC5BC,OAAO,EAAE,6BADmB;EAE5BC,OAAO,EAAE,KAFmB,CAEZ;;AAFY,CAAhB,CAAd,C,CAIA;;AACAH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAUC,MAAV,EAAkB;EAAA;;EAChB;EACA;EACA,IAAI,cAAAT,QAAQ,YAAR,8CAAYU,MAAZ,IAAqB,CAArB,IAA0BD,MAAM,CAACE,OAAP,CAAeC,aAAf,KAAiCC,SAA/D,EAA0E;IACxEJ,MAAM,CAACE,OAAP,CAAeC,aAAf,oBAAyCZ,QAAQ,EAAjD;EACD;;EACD,OAAOS,MAAP;AACD,CARH,EASE,UAAUK,KAAV,EAAiB;EACf;EACA,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAZH,E,CAcA;;AACAZ,KAAK,CAACI,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACE,UAAUS,QAAV,EAAoB;EAClB;EACA;EACA,OAAOA,QAAP;AACD,CALH,EAME,UAAUH,KAAV,EAAiB;EACf;EACA;EACA,IAAIA,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;IACjCjB,QAAQ;IACRF,MAAM,CAAC;MAAEoB,IAAI,EAAE,SAAR;MAAmBC,OAAO,EAAE;IAA5B,CAAD,CAAN;IACAtB,MAAM,CAACuB,OAAP,CAAe,QAAf;EACD;;EACD,OAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAfH;AAkBA,gBAAe,gBAMT;EAAA,IALJQ,GAKI,QALJA,GAKI;EAAA,uBAJJC,MAII;EAAA,IAJJA,MAII,4BAJK,KAIL;EAAA,uBAHJC,MAGI;EAAA,IAHJA,MAGI,4BAHK,EAGL;EAAA,qBAFJC,IAEI;EAAA,IAFJA,IAEI,0BAFG,EAEH;EAAA,wBADJd,OACI;EAAA,IADJA,OACI,6BADM,EACN;EACJ,OAAOT,KAAK,CAAC;IACXoB,GAAG,EAAHA,GADW;IAEXC,MAAM,EAANA,MAFW;IAGXC,MAAM,EAANA,MAHW;IAIXC,IAAI,EAAJA,IAJW;IAKXd,OAAO,EAAPA;EALW,CAAD,CAAZ;AAOD,CAdD"},"metadata":{},"sourceType":"module"}