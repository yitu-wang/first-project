{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\"; // Utils\n\nimport { createNamespace, addUnit } from '../utils';\nimport { inherit } from '../utils/functional'; // Types\n\nvar _createNamespace = createNamespace('skeleton'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nvar DEFAULT_ROW_WIDTH = '100%';\nvar DEFAULT_LAST_ROW_WIDTH = '60%';\n\nfunction Skeleton(h, props, slots, ctx) {\n  if (!props.loading) {\n    return slots.default && slots.default();\n  }\n\n  function Title() {\n    if (props.title) {\n      return h(\"h3\", {\n        \"class\": bem('title'),\n        \"style\": {\n          width: addUnit(props.titleWidth)\n        }\n      });\n    }\n  }\n\n  function Rows() {\n    var Rows = [];\n    var rowWidth = props.rowWidth;\n\n    function getRowWidth(index) {\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n\n      return rowWidth;\n    }\n\n    for (var i = 0; i < props.row; i++) {\n      Rows.push(h(\"div\", {\n        \"class\": bem('row'),\n        \"style\": {\n          width: addUnit(getRowWidth(i))\n        }\n      }));\n    }\n\n    return Rows;\n  }\n\n  function Avatar() {\n    if (props.avatar) {\n      var size = addUnit(props.avatarSize);\n      return h(\"div\", {\n        \"class\": bem('avatar', props.avatarShape),\n        \"style\": {\n          width: size,\n          height: size\n        }\n      });\n    }\n  }\n\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem({\n      animate: props.animate,\n      round: props.round\n    })\n  }, inherit(ctx)]), [Avatar(), h(\"div\", {\n    \"class\": bem('content')\n  }, [Title(), Rows()])]);\n}\n\nSkeleton.props = {\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  titleWidth: [Number, String],\n  avatarSize: [Number, String],\n  row: {\n    type: [Number, String],\n    default: 0\n  },\n  loading: {\n    type: Boolean,\n    default: true\n  },\n  animate: {\n    type: Boolean,\n    default: true\n  },\n  avatarShape: {\n    type: String,\n    default: 'round'\n  },\n  rowWidth: {\n    type: [Number, String, Array],\n    default: DEFAULT_ROW_WIDTH\n  }\n};\nexport default createComponent(Skeleton);","map":{"version":3,"names":["_mergeJSXProps","createNamespace","addUnit","inherit","_createNamespace","createComponent","bem","DEFAULT_ROW_WIDTH","DEFAULT_LAST_ROW_WIDTH","Skeleton","h","props","slots","ctx","loading","default","Title","title","width","titleWidth","Rows","rowWidth","getRowWidth","index","row","Array","isArray","i","push","Avatar","avatar","size","avatarSize","avatarShape","height","animate","round","Boolean","Number","String","type"],"sources":["C:/Users/小王/node_modules/vant/es/skeleton/index.js"],"sourcesContent":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\n// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { inherit } from '../utils/functional'; // Types\n\nvar _createNamespace = createNamespace('skeleton'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nvar DEFAULT_ROW_WIDTH = '100%';\nvar DEFAULT_LAST_ROW_WIDTH = '60%';\n\nfunction Skeleton(h, props, slots, ctx) {\n  if (!props.loading) {\n    return slots.default && slots.default();\n  }\n\n  function Title() {\n    if (props.title) {\n      return h(\"h3\", {\n        \"class\": bem('title'),\n        \"style\": {\n          width: addUnit(props.titleWidth)\n        }\n      });\n    }\n  }\n\n  function Rows() {\n    var Rows = [];\n    var rowWidth = props.rowWidth;\n\n    function getRowWidth(index) {\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n\n      return rowWidth;\n    }\n\n    for (var i = 0; i < props.row; i++) {\n      Rows.push(h(\"div\", {\n        \"class\": bem('row'),\n        \"style\": {\n          width: addUnit(getRowWidth(i))\n        }\n      }));\n    }\n\n    return Rows;\n  }\n\n  function Avatar() {\n    if (props.avatar) {\n      var size = addUnit(props.avatarSize);\n      return h(\"div\", {\n        \"class\": bem('avatar', props.avatarShape),\n        \"style\": {\n          width: size,\n          height: size\n        }\n      });\n    }\n  }\n\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem({\n      animate: props.animate,\n      round: props.round\n    })\n  }, inherit(ctx)]), [Avatar(), h(\"div\", {\n    \"class\": bem('content')\n  }, [Title(), Rows()])]);\n}\n\nSkeleton.props = {\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  titleWidth: [Number, String],\n  avatarSize: [Number, String],\n  row: {\n    type: [Number, String],\n    default: 0\n  },\n  loading: {\n    type: Boolean,\n    default: true\n  },\n  animate: {\n    type: Boolean,\n    default: true\n  },\n  avatarShape: {\n    type: String,\n    default: 'round'\n  },\n  rowWidth: {\n    type: [Number, String, Array],\n    default: DEFAULT_ROW_WIDTH\n  }\n};\nexport default createComponent(Skeleton);"],"mappings":"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"},"metadata":{},"sourceType":"module"}