{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n// Utils\nimport { bem } from './shared';\nimport { range } from '../utils/format/number';\nimport { preventDefault } from '../utils/dom/event'; // Mixins\n\nimport { TouchMixin } from '../mixins/touch'; // Component\n\nimport Image from '../image';\nimport Loading from '../loading';\nimport SwipeItem from '../swipe-item';\n\nfunction getDistance(touches) {\n  return Math.sqrt(Math.pow(touches[0].clientX - touches[1].clientX, 2) + Math.pow(touches[0].clientY - touches[1].clientY, 2));\n}\n\nexport default {\n  mixins: [TouchMixin],\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: [Number, String],\n    maxZoom: [Number, String],\n    rootWidth: Number,\n    rootHeight: Number\n  },\n  data: function data() {\n    return {\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    };\n  },\n  computed: {\n    vertical: function vertical() {\n      var rootWidth = this.rootWidth,\n          rootHeight = this.rootHeight;\n      var rootRatio = rootHeight / rootWidth;\n      return this.imageRatio > rootRatio;\n    },\n    imageStyle: function imageStyle() {\n      var scale = this.scale;\n      var style = {\n        transitionDuration: this.zooming || this.moving ? '0s' : '.3s'\n      };\n\n      if (scale !== 1) {\n        var offsetX = this.moveX / scale;\n        var offsetY = this.moveY / scale;\n        style.transform = \"scale(\" + scale + \", \" + scale + \") translate(\" + offsetX + \"px, \" + offsetY + \"px)\";\n      }\n\n      return style;\n    },\n    maxMoveX: function maxMoveX() {\n      if (this.imageRatio) {\n        var displayWidth = this.vertical ? this.rootHeight / this.imageRatio : this.rootWidth;\n        return Math.max(0, (this.scale * displayWidth - this.rootWidth) / 2);\n      }\n\n      return 0;\n    },\n    maxMoveY: function maxMoveY() {\n      if (this.imageRatio) {\n        var displayHeight = this.vertical ? this.rootHeight : this.rootWidth * this.imageRatio;\n        return Math.max(0, (this.scale * displayHeight - this.rootHeight) / 2);\n      }\n\n      return 0;\n    }\n  },\n  watch: {\n    active: 'resetScale',\n    show: function show(val) {\n      if (!val) {\n        this.resetScale();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.bindTouchEvent(this.$el);\n  },\n  methods: {\n    resetScale: function resetScale() {\n      this.setScale(1);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    setScale: function setScale(scale) {\n      scale = range(scale, +this.minZoom, +this.maxZoom);\n\n      if (scale !== this.scale) {\n        this.scale = scale;\n        this.$emit('scale', {\n          scale: this.scale,\n          index: this.active\n        });\n      }\n    },\n    toggleScale: function toggleScale() {\n      var scale = this.scale > 1 ? 1 : 2;\n      this.setScale(scale);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    onTouchStart: function onTouchStart(event) {\n      var touches = event.touches;\n      var _this$offsetX = this.offsetX,\n          offsetX = _this$offsetX === void 0 ? 0 : _this$offsetX;\n      this.touchStart(event);\n      this.touchStartTime = new Date();\n      this.fingerNum = touches.length;\n      this.startMoveX = this.moveX;\n      this.startMoveY = this.moveY;\n      this.moving = this.fingerNum === 1 && this.scale !== 1;\n      this.zooming = this.fingerNum === 2 && !offsetX;\n\n      if (this.zooming) {\n        this.startScale = this.scale;\n        this.startDistance = getDistance(event.touches);\n      }\n    },\n    onTouchMove: function onTouchMove(event) {\n      var touches = event.touches;\n      this.touchMove(event);\n\n      if (this.moving || this.zooming) {\n        preventDefault(event, true);\n      }\n\n      if (this.moving) {\n        var moveX = this.deltaX + this.startMoveX;\n        var moveY = this.deltaY + this.startMoveY;\n        this.moveX = range(moveX, -this.maxMoveX, this.maxMoveX);\n        this.moveY = range(moveY, -this.maxMoveY, this.maxMoveY);\n      }\n\n      if (this.zooming && touches.length === 2) {\n        var distance = getDistance(touches);\n        var scale = this.startScale * distance / this.startDistance;\n        this.setScale(scale);\n      }\n    },\n    onTouchEnd: function onTouchEnd(event) {\n      var stopPropagation = false;\n      /* istanbul ignore else */\n\n      if (this.moving || this.zooming) {\n        stopPropagation = true;\n\n        if (this.moving && this.startMoveX === this.moveX && this.startMoveY === this.moveY) {\n          stopPropagation = false;\n        }\n\n        if (!event.touches.length) {\n          if (this.zooming) {\n            this.moveX = range(this.moveX, -this.maxMoveX, this.maxMoveX);\n            this.moveY = range(this.moveY, -this.maxMoveY, this.maxMoveY);\n            this.zooming = false;\n          }\n\n          this.moving = false;\n          this.startMoveX = 0;\n          this.startMoveY = 0;\n          this.startScale = 1;\n\n          if (this.scale < 1) {\n            this.resetScale();\n          }\n        }\n      } // eliminate tap delay on safari\n\n\n      preventDefault(event, stopPropagation);\n      this.checkTap();\n      this.resetTouchStatus();\n    },\n    checkTap: function checkTap() {\n      var _this = this;\n\n      if (this.fingerNum > 1) {\n        return;\n      }\n\n      var _this$offsetX2 = this.offsetX,\n          offsetX = _this$offsetX2 === void 0 ? 0 : _this$offsetX2,\n          _this$offsetY = this.offsetY,\n          offsetY = _this$offsetY === void 0 ? 0 : _this$offsetY;\n      var deltaTime = new Date() - this.touchStartTime;\n      var TAP_TIME = 250;\n      var TAP_OFFSET = 5;\n\n      if (offsetX < TAP_OFFSET && offsetY < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (this.doubleTapTimer) {\n          clearTimeout(this.doubleTapTimer);\n          this.doubleTapTimer = null;\n          this.toggleScale();\n        } else {\n          this.doubleTapTimer = setTimeout(function () {\n            _this.$emit('close');\n\n            _this.doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    },\n    onLoad: function onLoad(event) {\n      var _event$target = event.target,\n          naturalWidth = _event$target.naturalWidth,\n          naturalHeight = _event$target.naturalHeight;\n      this.imageRatio = naturalHeight / naturalWidth;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var imageSlots = {\n      loading: function loading() {\n        return h(Loading, {\n          \"attrs\": {\n            \"type\": \"spinner\"\n          }\n        });\n      }\n    };\n    return h(SwipeItem, {\n      \"class\": bem('swipe-item')\n    }, [h(Image, {\n      \"attrs\": {\n        \"src\": this.src,\n        \"fit\": \"contain\"\n      },\n      \"class\": bem('image', {\n        vertical: this.vertical\n      }),\n      \"style\": this.imageStyle,\n      \"scopedSlots\": imageSlots,\n      \"on\": {\n        \"load\": this.onLoad\n      }\n    })]);\n  }\n};","map":{"version":3,"names":["bem","range","preventDefault","TouchMixin","Image","Loading","SwipeItem","getDistance","touches","Math","sqrt","pow","clientX","clientY","mixins","props","src","String","show","Boolean","active","Number","minZoom","maxZoom","rootWidth","rootHeight","data","scale","moveX","moveY","moving","zooming","imageRatio","displayWidth","displayHeight","computed","vertical","rootRatio","imageStyle","style","transitionDuration","offsetX","offsetY","transform","maxMoveX","max","maxMoveY","watch","val","resetScale","mounted","bindTouchEvent","$el","methods","setScale","$emit","index","toggleScale","onTouchStart","event","_this$offsetX","touchStart","touchStartTime","Date","fingerNum","length","startMoveX","startMoveY","startScale","startDistance","onTouchMove","touchMove","deltaX","deltaY","distance","onTouchEnd","stopPropagation","checkTap","resetTouchStatus","_this","_this$offsetX2","_this$offsetY","deltaTime","TAP_TIME","TAP_OFFSET","doubleTapTimer","clearTimeout","setTimeout","onLoad","_event$target","target","naturalWidth","naturalHeight","render","h","arguments","imageSlots","loading"],"sources":["C:/Users/小王/node_modules/vant/es/image-preview/ImagePreviewItem.js"],"sourcesContent":["// Utils\nimport { bem } from './shared';\nimport { range } from '../utils/format/number';\nimport { preventDefault } from '../utils/dom/event'; // Mixins\n\nimport { TouchMixin } from '../mixins/touch'; // Component\n\nimport Image from '../image';\nimport Loading from '../loading';\nimport SwipeItem from '../swipe-item';\n\nfunction getDistance(touches) {\n  return Math.sqrt(Math.pow(touches[0].clientX - touches[1].clientX, 2) + Math.pow(touches[0].clientY - touches[1].clientY, 2));\n}\n\nexport default {\n  mixins: [TouchMixin],\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: [Number, String],\n    maxZoom: [Number, String],\n    rootWidth: Number,\n    rootHeight: Number\n  },\n  data: function data() {\n    return {\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    };\n  },\n  computed: {\n    vertical: function vertical() {\n      var rootWidth = this.rootWidth,\n          rootHeight = this.rootHeight;\n      var rootRatio = rootHeight / rootWidth;\n      return this.imageRatio > rootRatio;\n    },\n    imageStyle: function imageStyle() {\n      var scale = this.scale;\n      var style = {\n        transitionDuration: this.zooming || this.moving ? '0s' : '.3s'\n      };\n\n      if (scale !== 1) {\n        var offsetX = this.moveX / scale;\n        var offsetY = this.moveY / scale;\n        style.transform = \"scale(\" + scale + \", \" + scale + \") translate(\" + offsetX + \"px, \" + offsetY + \"px)\";\n      }\n\n      return style;\n    },\n    maxMoveX: function maxMoveX() {\n      if (this.imageRatio) {\n        var displayWidth = this.vertical ? this.rootHeight / this.imageRatio : this.rootWidth;\n        return Math.max(0, (this.scale * displayWidth - this.rootWidth) / 2);\n      }\n\n      return 0;\n    },\n    maxMoveY: function maxMoveY() {\n      if (this.imageRatio) {\n        var displayHeight = this.vertical ? this.rootHeight : this.rootWidth * this.imageRatio;\n        return Math.max(0, (this.scale * displayHeight - this.rootHeight) / 2);\n      }\n\n      return 0;\n    }\n  },\n  watch: {\n    active: 'resetScale',\n    show: function show(val) {\n      if (!val) {\n        this.resetScale();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.bindTouchEvent(this.$el);\n  },\n  methods: {\n    resetScale: function resetScale() {\n      this.setScale(1);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    setScale: function setScale(scale) {\n      scale = range(scale, +this.minZoom, +this.maxZoom);\n\n      if (scale !== this.scale) {\n        this.scale = scale;\n        this.$emit('scale', {\n          scale: this.scale,\n          index: this.active\n        });\n      }\n    },\n    toggleScale: function toggleScale() {\n      var scale = this.scale > 1 ? 1 : 2;\n      this.setScale(scale);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    onTouchStart: function onTouchStart(event) {\n      var touches = event.touches;\n      var _this$offsetX = this.offsetX,\n          offsetX = _this$offsetX === void 0 ? 0 : _this$offsetX;\n      this.touchStart(event);\n      this.touchStartTime = new Date();\n      this.fingerNum = touches.length;\n      this.startMoveX = this.moveX;\n      this.startMoveY = this.moveY;\n      this.moving = this.fingerNum === 1 && this.scale !== 1;\n      this.zooming = this.fingerNum === 2 && !offsetX;\n\n      if (this.zooming) {\n        this.startScale = this.scale;\n        this.startDistance = getDistance(event.touches);\n      }\n    },\n    onTouchMove: function onTouchMove(event) {\n      var touches = event.touches;\n      this.touchMove(event);\n\n      if (this.moving || this.zooming) {\n        preventDefault(event, true);\n      }\n\n      if (this.moving) {\n        var moveX = this.deltaX + this.startMoveX;\n        var moveY = this.deltaY + this.startMoveY;\n        this.moveX = range(moveX, -this.maxMoveX, this.maxMoveX);\n        this.moveY = range(moveY, -this.maxMoveY, this.maxMoveY);\n      }\n\n      if (this.zooming && touches.length === 2) {\n        var distance = getDistance(touches);\n        var scale = this.startScale * distance / this.startDistance;\n        this.setScale(scale);\n      }\n    },\n    onTouchEnd: function onTouchEnd(event) {\n      var stopPropagation = false;\n      /* istanbul ignore else */\n\n      if (this.moving || this.zooming) {\n        stopPropagation = true;\n\n        if (this.moving && this.startMoveX === this.moveX && this.startMoveY === this.moveY) {\n          stopPropagation = false;\n        }\n\n        if (!event.touches.length) {\n          if (this.zooming) {\n            this.moveX = range(this.moveX, -this.maxMoveX, this.maxMoveX);\n            this.moveY = range(this.moveY, -this.maxMoveY, this.maxMoveY);\n            this.zooming = false;\n          }\n\n          this.moving = false;\n          this.startMoveX = 0;\n          this.startMoveY = 0;\n          this.startScale = 1;\n\n          if (this.scale < 1) {\n            this.resetScale();\n          }\n        }\n      } // eliminate tap delay on safari\n\n\n      preventDefault(event, stopPropagation);\n      this.checkTap();\n      this.resetTouchStatus();\n    },\n    checkTap: function checkTap() {\n      var _this = this;\n\n      if (this.fingerNum > 1) {\n        return;\n      }\n\n      var _this$offsetX2 = this.offsetX,\n          offsetX = _this$offsetX2 === void 0 ? 0 : _this$offsetX2,\n          _this$offsetY = this.offsetY,\n          offsetY = _this$offsetY === void 0 ? 0 : _this$offsetY;\n      var deltaTime = new Date() - this.touchStartTime;\n      var TAP_TIME = 250;\n      var TAP_OFFSET = 5;\n\n      if (offsetX < TAP_OFFSET && offsetY < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (this.doubleTapTimer) {\n          clearTimeout(this.doubleTapTimer);\n          this.doubleTapTimer = null;\n          this.toggleScale();\n        } else {\n          this.doubleTapTimer = setTimeout(function () {\n            _this.$emit('close');\n\n            _this.doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    },\n    onLoad: function onLoad(event) {\n      var _event$target = event.target,\n          naturalWidth = _event$target.naturalWidth,\n          naturalHeight = _event$target.naturalHeight;\n      this.imageRatio = naturalHeight / naturalWidth;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var imageSlots = {\n      loading: function loading() {\n        return h(Loading, {\n          \"attrs\": {\n            \"type\": \"spinner\"\n          }\n        });\n      }\n    };\n    return h(SwipeItem, {\n      \"class\": bem('swipe-item')\n    }, [h(Image, {\n      \"attrs\": {\n        \"src\": this.src,\n        \"fit\": \"contain\"\n      },\n      \"class\": bem('image', {\n        vertical: this.vertical\n      }),\n      \"style\": this.imageStyle,\n      \"scopedSlots\": imageSlots,\n      \"on\": {\n        \"load\": this.onLoad\n      }\n    })]);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}