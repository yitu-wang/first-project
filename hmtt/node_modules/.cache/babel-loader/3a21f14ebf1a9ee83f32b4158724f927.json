{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//引入接口函数\nimport { getUserChannelsAPI, getAllChannelsAPI, updateChannelsAPI, removeChannelsAPI } from '@/api'; //引入需要用的组件\n\nimport ArticleList from '@/components/ArticleList.vue';\nimport ChannelIEdit from './ChannelIEdit.vue';\nexport default {\n  name: 'home',\n\n  data() {\n    return {\n      active: 0,\n      userList: [],\n      allList: [],\n      show: false\n    };\n  },\n\n  async created() {\n    //获取用户频道列表\n    const {\n      data: res\n    } = await getUserChannelsAPI();\n    this.userList = res.data.channels; //获取所有的频道列表\n\n    const {\n      data: res2\n    } = await getAllChannelsAPI();\n    this.allList = res2.data.channels;\n  },\n\n  components: {\n    ArticleList,\n    ChannelIEdit\n  },\n\n  //页面dom元素加载完毕时执行\n  mounted() {\n    window.addEventListener('scroll', this.scrollListen);\n  },\n\n  methods: {\n    //设置监听页面滚动方法\n    scrollListen() {\n      this.$route.meta.scrollT = document.documentElement && document.documentElement.scrollTop;\n    },\n\n    showPopup() {\n      this.show = true;\n    },\n\n    //channelIEdit组件传出添加的组件(添加频道 )\n    async addChannelFn(val) {\n      //将新选的频道推送到用户频道\n      this.userList.push(val); //还要将最新的数组发送给后台\n      // 了解： 以前的要求：推荐频道不可以传入后台  并且后台接收的data中接受对象内容为 id频道id seq顺序序号\n\n      const newArr = this.userList.filter(item => item.id !== 0); // const newObjArr = newArr.map((item, index) => {\n      //   const newObj = {\n      //     ...item\n      //   }\n      //   delete newObj.name\n      //   newObj.seq = index\n      //   return newObj\n      // })\n\n      const res = await updateChannelsAPI(newArr);\n    },\n\n    //channel子件传递用户删除的频道按钮\n    async removeChannelFn(val) {\n      const index = this.userList.findIndex(item => item.id === val);\n      this.userList.splice(index, 1);\n      const res = await removeChannelsAPI({\n        channelID: val\n      });\n      this.active = val;\n    },\n\n    //点击channel子件右上方的x按钮隐藏管理页面\n    channelShow(val) {\n      this.show = val;\n    }\n\n  },\n  computed: {\n    //计算属性计算所有频道-用户频道=剩下可选择的频道\n    unCheckList() {\n      //把所有频道数组对象依次取出对比用户已选频道里查找，如果查找不到则filter一个新数组\n      const newArr = this.allList.filter(bigObj => {\n        const index = this.userList.some(smallObj => {\n          return smallObj.id === bigObj.id;\n        });\n\n        if (index) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n      return newArr;\n    }\n\n  },\n\n  //组件被缓存时触发的生命周期\n  //组件没有被缓存则会执行destroyed销毁生命周期函数\n  deactivated() {\n    window.removeEventListener('scroll', this.scrollListen);\n  },\n\n  //组件被激活时触发的生命周期\n  activated() {\n    if (this.$route.meta.scrollT > 0) {\n      window.scrollTo(0, this.$route.meta.scrollT);\n      this.$route.meta.scrollT = 0;\n      window.addEventListener('scroll', this.scrollListen);\n    }\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA,SACAA,kBADA,EAEAC,iBAFA,EAGAC,iBAHA,EAIAC,iBAJA,QAKA,OALA,C,CAMA;;AACA;AACA;AAEA;EACAC,YADA;;EAEAC;IACA;MACAC,SADA;MAEAC,YAFA;MAGAC,WAHA;MAIAC;IAJA;EAMA,CATA;;EAUA;IACA;IACA;MACAJ;IADA,IAEA,0BAFA;IAGA,kCALA,CAMA;;IACA;MACAA;IADA,IAEA,yBAFA;IAGA;EACA,CArBA;;EAsBAK;IACAC,WADA;IAEAC;EAFA,CAtBA;;EA0BA;EACAC;IACAC;EACA,CA7BA;;EA8BAC;IACA;IACAC;MACA;IACA,CAJA;;IAKAC;MACA;IACA,CAPA;;IAQA;IACA;MACA;MACA,wBAFA,CAGA;MACA;;MACA,2DALA,CAMA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;IACA,CAxBA;;IAyBA;IACA;MACA;MACA;MAEA;QACAC;MADA;MAGA;IACA,CAlCA;;IAoCA;IACAC;MACA;IACA;;EAvCA,CA9BA;EAuEAC;IACA;IACAC;MACA;MACA;QACA;UACA;QACA,CAFA;;QAGA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CATA;MAUA;IACA;;EAfA,CAvEA;;EAwFA;EACA;EACAC;IACAR;EACA,CA5FA;;EA6FA;EACAS;IACA;MACAT;MACA;MACAA;IACA;EACA;;AApGA","names":["getUserChannelsAPI","getAllChannelsAPI","updateChannelsAPI","removeChannelsAPI","name","data","active","userList","allList","show","components","ArticleList","ChannelIEdit","mounted","window","methods","scrollListen","showPopup","channelID","channelShow","computed","unCheckList","deactivated","activated"],"sourceRoot":"src/views/home-user","sources":["Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"box\" style=\"padding-bottom: 44px\">\r\n    <!-- 顶部 -->\r\n    <div>\r\n      <van-nav-bar style=\"background-color: #007bff\" fixed>\r\n        <template slot=\"left\" class=\"text\"> 头条黑马 </template>\r\n        <van-icon name=\"search\" slot=\"right\" color=\"#ffffff\" @click=\"$router.push('/search')\" />\r\n      </van-nav-bar>\r\n    </div>\r\n    <!-- 二级导航 -->\r\n    <div class=\"main\">\r\n      <van-tabs v-model=\"active\" sticky offset-top=\"44px\">\r\n        <van-tab v-for=\"(item, index) in userList\" :key=\"item.id\" :title=\"item.name\" :name=\"item.id\">\r\n          <ArticleList :articleListID=\"item.id\" style=\"margin-top: 44px\"></ArticleList>\r\n        </van-tab>\r\n      </van-tabs>\r\n      <van-icon name=\"plus\" size=\"14px\" class=\"moreChannels\" @click=\"showPopup\"></van-icon>\r\n    </div>\r\n    <!-- 频道管理弹出层 -->\r\n    <van-popup v-model=\"show\" class=\"popup\">\r\n      <ChannelIEdit :userList=\"userList\" :unCheckList=\"unCheckList\" @addChannelEV=\"addChannelFn\"\r\n        @channelShow=\"channelShow\" @removeChannelEV=\"removeChannelFn\" v-model=\"active\"></ChannelIEdit>\r\n    </van-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  //引入接口函数\r\n  import {\r\n    getUserChannelsAPI,\r\n    getAllChannelsAPI,\r\n    updateChannelsAPI,\r\n    removeChannelsAPI,\r\n  } from '@/api'\r\n  //引入需要用的组件\r\n  import ArticleList from '@/components/ArticleList.vue'\r\n  import ChannelIEdit from './ChannelIEdit.vue'\r\n\r\n  export default {\r\n    name: 'home',\r\n    data() {\r\n      return {\r\n        active: 0,\r\n        userList: [],\r\n        allList: [],\r\n        show: false,\r\n      }\r\n    },\r\n    async created() {\r\n      //获取用户频道列表\r\n      const {\r\n        data: res\r\n      } = await getUserChannelsAPI()\r\n      this.userList = res.data.channels\r\n      //获取所有的频道列表\r\n      const {\r\n        data: res2\r\n      } = await getAllChannelsAPI()\r\n      this.allList = res2.data.channels\r\n    },\r\n    components: {\r\n      ArticleList,\r\n      ChannelIEdit,\r\n    },\r\n    //页面dom元素加载完毕时执行\r\n    mounted() {\r\n      window.addEventListener('scroll', this.scrollListen)\r\n    },\r\n    methods: {\r\n      //设置监听页面滚动方法\r\n      scrollListen() {\r\n        this.$route.meta.scrollT = document.documentElement && document.documentElement.scrollTop\r\n      },\r\n      showPopup() {\r\n        this.show = true\r\n      },\r\n      //channelIEdit组件传出添加的组件(添加频道 )\r\n      async addChannelFn(val) {\r\n        //将新选的频道推送到用户频道\r\n        this.userList.push(val)\r\n        //还要将最新的数组发送给后台\r\n        // 了解： 以前的要求：推荐频道不可以传入后台  并且后台接收的data中接受对象内容为 id频道id seq顺序序号\r\n        const newArr = this.userList.filter((item) => item.id !== 0)\r\n        // const newObjArr = newArr.map((item, index) => {\r\n        //   const newObj = {\r\n        //     ...item\r\n        //   }\r\n        //   delete newObj.name\r\n        //   newObj.seq = index\r\n        //   return newObj\r\n        // })\r\n        const res = await updateChannelsAPI(newArr)\r\n      },\r\n      //channel子件传递用户删除的频道按钮\r\n      async removeChannelFn(val) {\r\n        const index = this.userList.findIndex((item) => item.id === val)\r\n        this.userList.splice(index, 1)\r\n\r\n        const res = await removeChannelsAPI({\r\n          channelID: val,\r\n        })\r\n        this.active = val\r\n      },\r\n\r\n      //点击channel子件右上方的x按钮隐藏管理页面\r\n      channelShow(val) {\r\n        this.show = val\r\n      },\r\n    },\r\n    computed: {\r\n      //计算属性计算所有频道-用户频道=剩下可选择的频道\r\n      unCheckList() {\r\n        //把所有频道数组对象依次取出对比用户已选频道里查找，如果查找不到则filter一个新数组\r\n        const newArr = this.allList.filter((bigObj) => {\r\n          const index = this.userList.some((smallObj) => {\r\n            return smallObj.id === bigObj.id\r\n          })\r\n          if (index) {\r\n            return false\r\n          } else {\r\n            return true\r\n          }\r\n        })\r\n        return newArr\r\n      },\r\n    },\r\n    //组件被缓存时触发的生命周期\r\n    //组件没有被缓存则会执行destroyed销毁生命周期函数\r\n    deactivated() {\r\n      window.removeEventListener('scroll', this.scrollListen)\r\n    },\r\n    //组件被激活时触发的生命周期\r\n    activated() {\r\n      if (this.$route.meta.scrollT > 0) {\r\n        window.scrollTo(0, this.$route.meta.scrollT);\r\n        this.$route.meta.scrollT = 0;\r\n        window.addEventListener('scroll', this.scrollListen);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  /deep/.van-nav-bar__left {\r\n    color: #ffffff;\r\n  }\r\n\r\n  /deep/.van-tabs__line {\r\n    background-color: #007bff;\r\n  }\r\n\r\n  /deep/ .van-tabs__wrap {\r\n    padding-right: 30Px;\r\n    background-color: #fff;\r\n  }\r\n\r\n  .moreChannels {\r\n    position: fixed;\r\n    top: 60Px;\r\n    right: 10Px;\r\n    z-index: 999;\r\n  }\r\n\r\n  .popup {\r\n    width: 100vw;\r\n    height: 100vh;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module"}